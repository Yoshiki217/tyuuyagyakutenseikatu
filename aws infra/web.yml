AWSTemplateFormatVersion: 2010-09-09
Description: AWS infra for web

Resources:

  #VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.1/16
      InstanceTenancy: default
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - key: Name 
          value: web-vpc
  
  #subnet
  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      availabilityZone: ap-northeast-2a
      cidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: 'true'
      vpcId: !Ref VPC
      tags:
        - key: Name
          value: web-subnet

  #InternetGateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - key: Name
          value: web-gw
  #EIP  
  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: !Ref web-Vpc
  #EC2
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !Ref AMI
      InstanceType: "t2.micro"
      SubnetId: !Ref Subnet
      BlockDeviceMappings:
        - DeviceName: '/dev/xvda'
          Ebs:
            VolumeType: 'gp2'
            VolumeSize: 8
      Tags:
        - Key: 'Name'
          Value: 'public-wb'
      SecurityGroupIds:
        - !Ref SecurityGroup
      KeyName: !Ref KeyPair

  #EC2
  EC2Instance2:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !Ref AMI
      InstanceType: "t2.micro"
      SubnetId: !Ref Subnet2
      BlockDeviceMappings:
        - DeviceName: '/dev/xvda'
          Ebs:
            VolumeType: 'gp2'
            VolumeSize: 8
      Tags:
        - Key: 'Name'
          Value: 'private'
      SecurityGroupIds:
        - !Ref SecurityGroup2
      KeyName: !Ref KeyPair

  #RDS
  DBinstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t2.micro
      DBname: 
        Ref: web-DB
      DBsecurityGroups:
        - Ref: SecurityGroup2
      DBSubnetGroupName:
        Ref: web-Subnet
      Engine: MySQL
      MasterUsername: 
        Ref: sample
      MasterUserPassword: 
        Ref: sample
      DeletionPolicy: Snapshot
      

  #SecurityGroup(public)    
  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "public-sg"
      VpcId: !Ref Vpc
      Tags:
        - Key: 'Name'
          Value: 'public-sg'
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
  
  #SecurityGroup(private)
  SecurityGroup2:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "private-sg"
      VpcId: !Ref vpc
      Tags:
        - Key: 'Name'
          Value: 'private-sg'
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 10.1.0.0/16
      - IpProtocol: tcp
        FromPort: '3306'
        ToPort: '3306'
        CidrIp: 10.1.0.0/16
      - IpProtocol: icmp
        FromPort: '8'
        ToPort: '-1'
        CidrIp: 10.1.0.0/16